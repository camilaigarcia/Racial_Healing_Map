# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
#Updating column names
col_names <- names(joined_sf)
# Loop over column names and rename columns
for (i in seq_along(col_names)) {
# Replace dots with underscores
new_col_name <- gsub("\\.", "_", col_names[i])
# Replace X with Pct
new_col_name <- gsub("^X", "Pct", new_col_name)
# Rename column
names(df)[i] <- new_col_name
}
#IMPORTING PACKAGES
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(sf)
library(shinyjs)
library(dplyr)
library(shinydashboard)
library(reshape2)
library(plotly)
library(ggplot2)
library(hms)
library(DT)
library(stringr)
library(tools)
library(readr)
library(fontawesome)
library(geojsonR)
library(purrr)
library(RColorBrewer)
#IMPORTING DATA FILE
data <- read.csv("merged_outcomes_v2.csv")
#census_data <- read.csv("chr_race_measures.csv")
colnames(data)[45] <- "X_Black"
colnames(data)[46] <- "X_American_Indian"
colnames(data)[47] <- "X_Asian"
colnames(data)[48] <- "X_Native_Hawaiian"
colnames(data)[49] <- "X_Hispanic"
colnames(data)[50] <- "X_White"
#IMPORTING DATA DICTIONARY
dictionary <- read.csv("data_dictionary_V2.csv")
#combined_data <- left_join(data, census_data, by = "County")
#IMPORTING SPATIAL DATA
#Loading  Counties (Polygons)
pa_bound <- st_read("Pennsylvania_County_Boundaries.shp")
pa_bound <- st_transform(pa_bound, crs = st_crs("+proj=longlat +datum=WGS84"))
#SPATIAL JOIN BETWEEN COUNTIES AND DATA
#Joining data sets
joined_sf <- left_join(pa_bound, data, by = "COUNTY_NAM")
#joined_sf <- subset(joined_sf, select = -c("FIPS.y", "Race"))
joined_sf$Violent.Crime.Rate <- as.numeric(joined_sf$Violent.Crime.Rate)
joined_sf$Population <- as.numeric(joined_sf$Population)
joined_sf$Women.s.Median.Earnings <- as.numeric(joined_sf$Women.s.Median.Earnings)
# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
# Loop to update column names
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(name, "X")) {
new_name <- gsub("X", "Pct", name)
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
joined_sf
runApp('app_V5.R')
# Loop to update column names
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(name, "X")) {
new_name <- gsub("X", "Pct", name)
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
joined_sf
runApp('app_V5.R')
joined_sf
runApp('app_V5.R')
runApp('app_V5.R')
#IMPORTING PACKAGES
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(sf)
library(shinyjs)
library(dplyr)
library(shinydashboard)
library(reshape2)
library(plotly)
library(ggplot2)
library(hms)
library(DT)
library(stringr)
library(tools)
library(readr)
library(fontawesome)
library(geojsonR)
library(purrr)
library(RColorBrewer)
#IMPORTING DATA FILE
data <- read.csv("merged_outcomes_v2.csv")
#census_data <- read.csv("chr_race_measures.csv")
colnames(data)[45] <- "Pct_Black"
colnames(data)[46] <- "Pct_American_Indian"
colnames(data)[47] <- "Pct_Asian"
colnames(data)[48] <- "Pct_Native_Hawaiian"
colnames(data)[49] <- "Pct_Hispanic"
colnames(data)[50] <- "Pct_White"
#IMPORTING DATA DICTIONARY
dictionary <- read.csv("data_dictionary_V2.csv")
#combined_data <- left_join(data, census_data, by = "County")
#IMPORTING SPATIAL DATA
#Loading  Counties (Polygons)
pa_bound <- st_read("Pennsylvania_County_Boundaries.shp")
pa_bound <- st_transform(pa_bound, crs = st_crs("+proj=longlat +datum=WGS84"))
#SPATIAL JOIN BETWEEN COUNTIES AND DATA
#Joining data sets
joined_sf <- left_join(pa_bound, data, by = "COUNTY_NAM")
#joined_sf <- subset(joined_sf, select = -c("FIPS.y", "Race"))
#joined_sf$Violent.Crime.Rate <- as.numeric(joined_sf$Violent.Crime.Rate)
#joined_sf$Population <- as.numeric(joined_sf$Population)
#joined_sf$Women.s.Median.Earnings <- as.numeric(joined_sf$Women.s.Median.Earnings)
# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
# Loop to update column names
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(name, "X")) {
new_name <- gsub("X", "Pct", name)
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
joined_sf
colnames(joined_sf)
runApp('app_V5.R')
joined
joined_sf
colnames(joined_sf)
runApp('app_V5.R')
runApp('app_V5.R')
#IMPORTING PACKAGES
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(sf)
library(shinyjs)
library(dplyr)
library(shinydashboard)
library(reshape2)
library(plotly)
library(ggplot2)
library(hms)
library(DT)
library(stringr)
library(tools)
library(readr)
library(fontawesome)
library(geojsonR)
library(purrr)
library(RColorBrewer)
#IMPORTING DATA FILE
data <- read.csv("merged_outcomes_v2.csv")
#census_data <- read.csv("chr_race_measures.csv")
colnames(data)[45] <- "Pct_Black"
colnames(data)[46] <- "Pct_American_Indian"
colnames(data)[47] <- "Pct_Asian"
colnames(data)[48] <- "Pct_Native_Hawaiian"
colnames(data)[49] <- "Pct_Hispanic"
colnames(data)[50] <- "Pct_White"
#IMPORTING DATA DICTIONARY
dictionary <- read.csv("data_dictionary_V2.csv")
#combined_data <- left_join(data, census_data, by = "County")
#IMPORTING SPATIAL DATA
#Loading  Counties (Polygons)
pa_bound <- st_read("Pennsylvania_County_Boundaries.shp")
pa_bound <- st_transform(pa_bound, crs = st_crs("+proj=longlat +datum=WGS84"))
#SPATIAL JOIN BETWEEN COUNTIES AND DATA
#Joining data sets
joined_sf <- left_join(pa_bound, data, by = "COUNTY_NAM")
#joined_sf <- subset(joined_sf, select = -c("FIPS.y", "Race"))
#joined_sf$Violent.Crime.Rate <- as.numeric(joined_sf$Violent.Crime.Rate)
#joined_sf$Population <- as.numeric(joined_sf$Population)
#joined_sf$Women.s.Median.Earnings <- as.numeric(joined_sf$Women.s.Median.Earnings)
# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(tolower(name), "x")) {
new_name <- gsub("x", "Pct", name, ignore.case = TRUE)
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
joined_sf
#IMPORTING PACKAGES
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(sf)
library(shinyjs)
library(dplyr)
library(shinydashboard)
library(reshape2)
library(plotly)
library(ggplot2)
library(hms)
library(DT)
library(stringr)
library(tools)
library(readr)
library(fontawesome)
library(geojsonR)
library(purrr)
library(RColorBrewer)
#IMPORTING DATA FILE
data <- read.csv("merged_outcomes_v2.csv")
#census_data <- read.csv("chr_race_measures.csv")
colnames(data)[45] <- "Pct_Black"
colnames(data)[46] <- "Pct_American_Indian"
colnames(data)[47] <- "Pct_Asian"
colnames(data)[48] <- "Pct_Native_Hawaiian"
colnames(data)[49] <- "Pct_Hispanic"
colnames(data)[50] <- "Pct_White"
#IMPORTING DATA DICTIONARY
dictionary <- read.csv("data_dictionary_V2.csv")
#combined_data <- left_join(data, census_data, by = "County")
#IMPORTING SPATIAL DATA
#Loading  Counties (Polygons)
pa_bound <- st_read("Pennsylvania_County_Boundaries.shp")
pa_bound <- st_transform(pa_bound, crs = st_crs("+proj=longlat +datum=WGS84"))
#SPATIAL JOIN BETWEEN COUNTIES AND DATA
#Joining data sets
joined_sf <- left_join(pa_bound, data, by = "COUNTY_NAM")
#joined_sf <- subset(joined_sf, select = -c("FIPS.y", "Race"))
#joined_sf$Violent.Crime.Rate <- as.numeric(joined_sf$Violent.Crime.Rate)
#joined_sf$Population <- as.numeric(joined_sf$Population)
#joined_sf$Women.s.Median.Earnings <- as.numeric(joined_sf$Women.s.Median.Earnings)
# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(name, "X")) {
new_name <- gsub("^X", "Pct", name)
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
joined_sf
runApp('app_V5.R')
#IMPORTING PACKAGES
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(sf)
library(shinyjs)
library(dplyr)
library(shinydashboard)
library(reshape2)
library(plotly)
library(ggplot2)
library(hms)
library(DT)
library(stringr)
library(tools)
library(readr)
library(fontawesome)
library(geojsonR)
library(purrr)
library(RColorBrewer)
#IMPORTING DATA FILE
data <- read.csv("merged_outcomes_v2.csv")
#census_data <- read.csv("chr_race_measures.csv")
colnames(data)[45] <- "Pct_Black"
colnames(data)[46] <- "Pct_American_Indian"
colnames(data)[47] <- "Pct_Asian"
colnames(data)[48] <- "Pct_Native_Hawaiian"
colnames(data)[49] <- "Pct_Hispanic"
colnames(data)[50] <- "Pct_White"
#IMPORTING DATA DICTIONARY
dictionary <- read.csv("data_dictionary_V2.csv")
#combined_data <- left_join(data, census_data, by = "County")
#IMPORTING SPATIAL DATA
#Loading  Counties (Polygons)
pa_bound <- st_read("Pennsylvania_County_Boundaries.shp")
pa_bound <- st_transform(pa_bound, crs = st_crs("+proj=longlat +datum=WGS84"))
#SPATIAL JOIN BETWEEN COUNTIES AND DATA
#Joining data sets
joined_sf <- left_join(pa_bound, data, by = "COUNTY_NAM")
#joined_sf <- subset(joined_sf, select = -c("FIPS.y", "Race"))
#joined_sf$Violent.Crime.Rate <- as.numeric(joined_sf$Violent.Crime.Rate)
#joined_sf$Population <- as.numeric(joined_sf$Population)
#joined_sf$Women.s.Median.Earnings <- as.numeric(joined_sf$Women.s.Median.Earnings)
# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
# Loop to update column names
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(name, "X")) {
new_name <- paste0("Pct", substring(name, 2))
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
joined_sf
#IMPORTING PACKAGES
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(sf)
library(shinyjs)
library(dplyr)
library(shinydashboard)
library(reshape2)
library(plotly)
library(ggplot2)
library(hms)
library(DT)
library(stringr)
library(tools)
library(readr)
library(fontawesome)
library(geojsonR)
library(purrr)
library(RColorBrewer)
#IMPORTING DATA FILE
data <- read.csv("merged_outcomes_v2.csv")
#census_data <- read.csv("chr_race_measures.csv")
colnames(data)[45] <- "Pct_Black"
colnames(data)[46] <- "Pct_American_Indian"
colnames(data)[47] <- "Pct_Asian"
colnames(data)[48] <- "Pct_Native_Hawaiian"
colnames(data)[49] <- "Pct_Hispanic"
colnames(data)[50] <- "Pct_White"
#IMPORTING DATA DICTIONARY
dictionary <- read.csv("data_dictionary_V2.csv")
#combined_data <- left_join(data, census_data, by = "County")
#IMPORTING SPATIAL DATA
#Loading  Counties (Polygons)
pa_bound <- st_read("Pennsylvania_County_Boundaries.shp")
pa_bound <- st_transform(pa_bound, crs = st_crs("+proj=longlat +datum=WGS84"))
#SPATIAL JOIN BETWEEN COUNTIES AND DATA
#Joining data sets
joined_sf <- left_join(pa_bound, data, by = "COUNTY_NAM")
#joined_sf <- subset(joined_sf, select = -c("FIPS.y", "Race"))
#joined_sf$Violent.Crime.Rate <- as.numeric(joined_sf$Violent.Crime.Rate)
#joined_sf$Population <- as.numeric(joined_sf$Population)
#joined_sf$Women.s.Median.Earnings <- as.numeric(joined_sf$Women.s.Median.Earnings)
# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
# Loop to update column names
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(name, "X")) {
new_name <- paste0("Pct", substring(name, 2))
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
for (i in seq_along(colnames(joinsed_sf))) {
name <- colnames(joined_sf)[i]
if (startsWith(name, "X")) {
new_name <- gsub("X", "Pct", name)
colnames(joined_sf)[i] <- new_name
}
}
#IMPORTING PACKAGES
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(sf)
library(shinyjs)
library(dplyr)
library(shinydashboard)
library(reshape2)
library(plotly)
library(ggplot2)
library(hms)
library(DT)
library(stringr)
library(tools)
library(readr)
library(fontawesome)
library(geojsonR)
library(purrr)
library(RColorBrewer)
#IMPORTING DATA FILE
data <- read.csv("merged_outcomes_v2.csv")
#census_data <- read.csv("chr_race_measures.csv")
colnames(data)[45] <- "Pct_Black"
colnames(data)[46] <- "Pct_American_Indian"
colnames(data)[47] <- "Pct_Asian"
colnames(data)[48] <- "Pct_Native_Hawaiian"
colnames(data)[49] <- "Pct_Hispanic"
colnames(data)[50] <- "Pct_White"
#IMPORTING DATA DICTIONARY
dictionary <- read.csv("data_dictionary_V2.csv")
#combined_data <- left_join(data, census_data, by = "County")
#IMPORTING SPATIAL DATA
#Loading  Counties (Polygons)
pa_bound <- st_read("Pennsylvania_County_Boundaries.shp")
pa_bound <- st_transform(pa_bound, crs = st_crs("+proj=longlat +datum=WGS84"))
#SPATIAL JOIN BETWEEN COUNTIES AND DATA
#Joining data sets
joined_sf <- left_join(pa_bound, data, by = "COUNTY_NAM")
#joined_sf <- subset(joined_sf, select = -c("FIPS.y", "Race"))
#joined_sf$Violent.Crime.Rate <- as.numeric(joined_sf$Violent.Crime.Rate)
#joined_sf$Population <- as.numeric(joined_sf$Population)
#joined_sf$Women.s.Median.Earnings <- as.numeric(joined_sf$Women.s.Median.Earnings)
# joined_sf <- joined_sf %>% rename(Pct_Low_birthweight = X..Low.birthweight,
#                                   Pct_with.Annual.Mammogram = X..With.Annual.Mammogram,
#                                   Pct_Children_in_Poverty = X..Children.in.Poverty,
#                                   Pct_Frequent_Physical_Distress = X..Frequent.Physical.Distress,
#                                   Pct_Frequent_Mental_Distress = X..Frequent.Mental.Distress,
#                                   )
# Loop to update column names
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (grepl("\\.", name)) {
new_name <- gsub("\\.", "_", name)
} else if (startsWith(name, "X")) {
new_name <- paste0("Pct", substring(name, 2))
} else {
new_name <- name
}
colnames(joined_sf)[i] <- new_name
}
for (i in seq_along(colnames(joined_sf))) {
name <- colnames(joined_sf)[i]
if (startsWith(name, "X")) {
new_name <- gsub("X", "Pct", name)
colnames(joined_sf)[i] <- new_name
}
}
joined_sf
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
runApp('app_V5.R')
